# Unix
alias ll="ls -al"
alias ln="ln -v"
alias mkdir="mkdir -p"
alias e="$EDITOR"
alias v="$VISUAL"
alias cc="say 'Command complete'"

# Git
alias gaac="g aa && g ci"
alias gacm="g aa && g ci --amend"
alias	hb="hub browse"
alias cor="git recent | selecta | xargs git checkout"
alias gr="git recent"
alias grh="git reset --hard"
alias so="source /Users/dylanandrews/.dotfiles/aliases"
alias gpo="git pull origin \$(git branch --show-current)"
alias gs="git stash"
alias gsp="git stash pop"

# Node
alias ygls="yarn global list"
alias yga="yarn global add"
alias yi="yarn install"
alias yr="yarn run"
alias ys="yarn start"
alias ngls="npm list -g --depth 0"

# EXA
alias ls="exa"

# GoNoodle API
alias b="bundle"
alias be="bundle exec"
alias rdr="bundle exec rake db:rollback"
alias rdr="bundle exec rake db:migrate"
alias bi="bundle install"
alias bp="bundle package"
alias mi="bundle exec rake db:migrate"
alias nukedb="bundle exec rake log:clear db:reset && bundle exec rake db:test:prepare && redis-cli flushall"
alias nukedbf="FULL=1 bundle exec rake log:clear db:reset && bundle exec rake db:test:prepare && redis-cli flushall"
alias gnfs="PORT=8082 yarn start:debug"
alias be='bundle exec'
alias lst='tree'

# Stripe
alias pc='pay console'
alias ps='cd ~/stripe/pay-server'
alias tj='cd ~/stripe/taxjar'
alias ex='cd ~/stripe/ex_smartcalcs'
alias ptja='pay ssh --force-tty "tmux a"'
alias ptj='pay ssh --force-tty "cd /pay/src/taxjar; source ./bin/devbox_env; /bin/bash"'
alias peac='pay ssh --force-tty "cd /pay/src/engine-admin-console; source ./bin/devbox_env; /bin/bash"'
alias pfiling='pay ssh --force-tty "cd /pay/src/filing_api; source ./bin/devbox_env; /bin/bash"'
alias pcent='pay ssh --force-tty "cd /pay/src/centauri; source ./bin/devbox_env; /bin/bash"'
alias ldb='ssh -L 3333:localhost:5432 "$USER"@"$(pay show-host)"'

# Taxjar
alias trs='cd ~/Documents/tj/tax-rate-service'
alias bep='bundle exec pronto run -c origin/master --unstaged'
alias sf='SKIP_FIXTURES=true'
alias js='JS_SPECS=true'

alias atom='open -a Atom'
alias g='git'
alias h='cd ~'
alias dot='cd ~/.dotfiles'
alias pos='git pull origin staging'
alias cos='git checkout staging'
alias prm='hub pull-request -m  '
alias rc='bundle exec rails console'
alias rdm='bundle exec rake db:migrate'
alias rdr='bundle exec rake db:rollback'
alias rtp='bundle exec rake db:test:prepare'
alias bss='bundle exec spring stop'
alias awsstaging='awsume staging && kubectl config use-context staging'

# Weatherfetch gem
alias wfd='weatherfetch daily 37205'
alias wfh='weatherfetch hourly 37205'

# tmux
alias mux="tmuxinator"
alias tk="tmux kill-server"
alias ls32="lsof -ti tcp:3002 | xargs kill"
alias ls31="lsof -ti tcp:3001 | xargs kill"
alias ls30="lsof -ti tcp:3000 | xargs kill"
alias lsall="lsof -ti tcp:3002 | xargs kill;lsof -ti tcp:3001 | xargs kill;lsof -ti tcp:3000 | xargs kill"
alias tmj="tmuxinator start taxjar -p ~/.dotfiles/tmuxinator/taxjar.yml"


# Pretty print the path
alias path='echo $PATH | tr -s ":" "\n"'

function resetdb {
  bundle exec rails db:environment:set RAILS_ENV=development
  if [[ $1 == '-f' ]] || [[ $1 == '--full' ]]; then
    echo "DB Reset (full)"
    bundle exec rails log:clear db:setup
    export FULL=1
    bundle exec rails seed:channels seed:games seed:videos seed:youtube_videos seed:discover_modules seed:mixes seed:recommendation_tiles seed:randomizer_tiles
  elif [[ $1 == '-s' ]] || [[ $1 == '--simple' ]]; then
    echo "DB Reset (simple)"
    bundle exec rails log:clear db:drop db:create db:schema:load
  else
    echo "DB Reset"
    bundle exec rails log:clear db:setup seed:discover_modules seed:recommendation_tiles seed:randomizer_tiles
  fi
  echo "Preparing Test DB"
  RAILS_ENV=test bundle exec rails db:drop db:create db:schema:load
}

function rtdb {
  echo "Preparing Test DB"
  bin/rails db:environment:set RAILS_ENV=test
  RAILS_ENV=test bundle exec rake db:drop db:create db:structure:load tax_rules:db:create tax_rules:db:migrate
  RAILS_ENV=test bundle exec rake bulk_storage:db:drop bulk_storage:db:create bulk_storage:db:structure:load
  RAILS_ENV=test bundle exec rake shards:drop shards:create
  psql tj_test_transactions_shard0 < ./db/tranx_shards_structure.sql
  psql tj_test_transactions_shard1 < ./db/tranx_shards_structure.sql
  psql tj_test_receipt_item_taxes_shard0 < ./db/rits_shards_structure.sql
  psql tj_test_receipt_item_taxes_shard1 < ./db/rits_shards_structure.sql
  RAILS_ENV=test bundle exec rake db:migrate
  echo "DONE!"
}
