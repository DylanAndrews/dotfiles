# Unix
alias ll="ls -al"
alias ln="ln -v"
alias mkdir="mkdir -p"
alias e="$EDITOR"
alias v="$VISUAL"
alias cc="say 'Command complete'"

# Git
alias gaac="g aa && g ci"
alias gacm="g aa && g ci --amend"
alias g="hub"
alias	hb="hub browse"
alias cor="git recent | hs | xargs git checkout"

# Node
alias ygls="yarn global list"
alias yga="yarn global add"
alias yi="yarn install"
alias yr="yarn run"
alias ys="yarn start"
alias ngls="npm list -g --depth 0"

# EXA
alias ls="exa"

# GoNoodle API
alias b="bundle"
alias be="bundle exec"
alias rdr="bundle exec rake db:rollback"
alias rdr="bundle exec rake db:migrate"
alias bi="bundle install"
alias bp="bundle package"
alias mi="bundle exec rake db:migrate"
alias nukedb="bundle exec rake log:clear db:reset && bundle exec rake db:test:prepare && redis-cli flushall"
alias nukedbf="FULL=1 bundle exec rake log:clear db:reset && bundle exec rake db:test:prepare && redis-cli flushall"
alias gnfs="PORT=8082 yarn start:debug"
alias be='bundle exec'
alias lst='tree'
alias gn='cd ~/Dropbox/GoNoodle/gn-api\ copy/'

# Taxjar
alias tj='cd ~/Documents/tj/taxjar'
alias trs='cd ~/Documents/tj/tax-rate-service'
alias bep='bundle exec pronto run -c origin/master --unstaged'

alias atom='open -a Atom'
alias g='git'
alias h='cd ~'
alias dot='cd ~/.dotfiles'
alias pos='git pull origin staging'
alias cos='git checkout staging'
alias prm='hub pull-request -m  '
alias rc='bundle exec rails console'
alias rdm='bundle exec rake db:migrate'
alias rdr='bundle exec rake db:rollback'
alias rtp='bundle exec rake db:test:prepare'
alias bss='bundle exec spring stop'
alias awsstaging='awsume staging && kubectl config use-context staging'

# Weatherfetch gem
alias wfd='weatherfetch daily 37205'
alias wfh='weatherfetch hourly 37205'

# tmux
alias mux="tmuxinator"
alias tk="tmux kill-server"

# Pretty print the path
alias path='echo $PATH | tr -s ":" "\n"'

function resetdb {
  bundle exec rails db:environment:set RAILS_ENV=development
  if [[ $1 == '-f' ]] || [[ $1 == '--full' ]]; then
    echo "DB Reset (full)"
    bundle exec rails log:clear db:setup
    export FULL=1
    bundle exec rails seed:channels seed:games seed:videos seed:youtube_videos seed:discover_modules seed:mixes seed:recommendation_tiles seed:randomizer_tiles
  elif [[ $1 == '-s' ]] || [[ $1 == '--simple' ]]; then
    echo "DB Reset (simple)"
    bundle exec rails log:clear db:drop db:create db:schema:load
  else
    echo "DB Reset"
    bundle exec rails log:clear db:setup seed:discover_modules seed:recommendation_tiles seed:randomizer_tiles
  fi
  echo "Preparing Test DB"
  RAILS_ENV=test bundle exec rails db:drop db:create db:schema:load
}

function rtdb {
  echo "Preparing Test DB"
  bin/rails db:environment:set RAILS_ENV=test
  RAILS_ENV=test bundle exec rake db:drop db:create db:structure:load tax_rules:db:create tax_rules:db:migrate
  RAILS_ENV=test bundle exec rake bulk_storage:db:drop bulk_storage:db:create bulk_storage:db:structure:load
  RAILS_ENV=test bundle exec rake shards:drop shards:create
  psql tj_test_transactions_shard0 < ./db/tranx_shards_structure.sql
  psql tj_test_transactions_shard1 < ./db/tranx_shards_structure.sql
  psql tj_test_receipt_item_taxes_shard0 < ./db/rits_shards_structure.sql
  psql tj_test_receipt_item_taxes_shard1 < ./db/rits_shards_structure.sql
  RAILS_ENV=test bundle exec rake db:migrate
  echo "DONE!"
}
